<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="icon" href="./Lovepik_com-400495836-heart.png">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Heart Attack Prediction Model</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

    <script>

        function Prediction() {
            var graph = document.getElementById("myChart1");
            graph.style.visibility = 'visible';
            var pre = {}
            pre.Age = parseInt(document.getElementById("age").value)
            pre.Sex = document.querySelector('input[name="gander"]:checked').value 
            pre.RestingBP = document.getElementById("RestingBP").value
            pre.Cholesterol = document.getElementById("Cholesterol").value
            pre.FastingBS = document.getElementById("FastingBS").value
            pre.MaxHR = document.getElementById("MaxHR").value
            pre.ExerciseAngina = document.getElementById("ExerciseAngina").value
            pre.Oldpeak = document.getElementById("Oldpeak").value
            if(document.getElementById("ChestPainType").value == 'ATA' ){
                pre.ChestPainType_ATA = 1
                pre.ChestPainType_NAP = 0
                pre.ChestPainType_TA = 0
            }
            else if(document.getElementById("ChestPainType").value == 'NAP'){
                pre.ChestPainType_ATA = 0
                pre.ChestPainType_NAP = 1
                pre.ChestPainType_TA = 0
            }
            else{
                pre.ChestPainType_ATA = 0
                pre.ChestPainType_NAP = 0
                pre.ChestPainType_TA = 1
            }
        
            if(document.getElementById("RestingECG").value == 'Normal'){
                pre.RestingECG_Normal = 1;
                pre.RestingECG_ST = 0;
            }
            else{
                pre.RestingECG_Normal = 0;
                pre.RestingECG_ST = 1; 
            }
            
            if(document.getElementById("ST_Slope").value == 'Up'){
                pre.ST_Slope_Flat = 0;
                pre.ST_Slope_Up = 1;
            }
            else{
                pre.ST_Slope_Flat = 1;
                pre.ST_Slope_Up = 0;
            }


            // send http request localhost:5000/predict
            var xmlHttp = new XMLHttpRequest();

            xmlHttp.onreadystatechange = function() {
                if (xmlHttp.readyState == XMLHttpRequest.DONE) {
                    var label = xmlHttp.responseText;
                    if (label > 0.5) document.querySelector('h1').innerHTML = "Positive"
                    else document.querySelector('h1').innerHTML = "Negative"
                    chartIt(parseFloat(label));
                }
            }

            var theUrl = "http://localhost:5000/predict";
            xmlHttp.open("POST", theUrl);
            xmlHttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            xmlHttp.send(JSON.stringify(pre));

            
        }

        
    </script>

    <style>
        *{
            text-align: center;
            /* align-items: center; */
        }
        body{
            background-image: url("./heart_attack2.jpeg");
            background-size: cover;
            background-repeat: no-repeat;
            height: 180vh;
        }
        header {color: white; font-size: 30px; font-family: Arial}
    </style>
</head>

<body>
    <div class="background-imag"></div>
    <!-- <img src="./heart_attack.jpg" alt="heart"> -->
    <header>Heart Attack Prediction Model</header>
   <br>

   <br>
   
    <div class="for-gander">
        <input  type='radio' id='male' value="0" checked='checked' name='gander'>
        <label style="margin-right: 100px; color: white; font-size: 20px; font-family: Arial"  for='male'>Male</label>
        <input type='radio' id='female' value="1" name='gander'>
        <label for='female' style="color: white; font-size: 20px; font-family: Arial">Female</label>
    </div>

    <div class="form-age" style="padding: 20px 0 10px 0;">
        <label for="sliderAll" style="color: white; font-size: 20px; font-family: Arial;">Age:</label>
        <input type="range" id="s_age" min="1" max="120" value="0"
        style="width: 40%;" />
        <input id="age" min="1" max="120" value="0" style="margin-left:10px;" />
        <hr style="height:1px;border-width:0;color:gray;background-color:gray; width: 60%;">
      </div>

      <div class="form-Cholesterol" style="padding: 10px 0 10px 0;">
        <label for="sliderAll" style="color: white; font-size: 20px; font-family: Arial">Cholesterol:</label>
        <input type="range" id="s_Cholesterol" min="40" max="500" value="0"
        style="width: 40%;" />
        <input id="Cholesterol" min="40" max="1000" value="0" style="margin-left:10px;" />
        <hr style="height:1px;border-width:0;color:gray;background-color:gray; width: 60%;">
      </div>

      <div class="form-RestingBP" style="padding: 10px 0 10px 0;">
        <label for="sliderAll" style="color: white; font-size: 20px; font-family: Arial">RestingBP:</label>
        <input type="range" id="s_RestingBP" min="20" max="220" value="0"
        style="width: 40%;" />
        <input id="RestingBP" min="20" max="220" value="0" style="margin-left:10px;" />
        <hr style="height:1px;border-width:0;color:gray;background-color:gray; width: 60%;">
      </div>

      <div class="form-MaxHR" style="padding: 10px 0 10px 0;">
        <label for="sliderAll" style="color: white; font-size: 20px; font-family: Arial">MaxHR:</label>
        <input type="range" id="s_MaxHR" min="20" max="300" value="0"
        style="width: 40%;" />
        <input id="MaxHR" min="20" max="300" value="0" style="margin-left:10px;" />
        <hr style="height:1px;border-width:0;color:gray;background-color:gray; width: 60%;">
      </div>

      <div class="choos1">
        <p1 style="font-size: 20px; font-family: Arial; color: aliceblue; padding: 10px;">ChestPainType: </p1>
        <select id="ChestPainType" style="padding: 4px; color:black;">
            <option value='ATA'>ATA</option>
            <option value='NAP'>NAP</option>
            <option value='ASY'>ASY</option>
            <!-- <option value='TA'>TA</option> -->
        </select>
 
        <p1 style="font-size: 20px; font-family: Arial; color: aliceblue; padding: 0 10px 0 90px ;">FastingBS: </p1>
        <select id="FastingBS" style="padding: 4px; color: black;">
            <option value='0'>No</option>
            <option value='1'>Yes</option>
        </select>
    </div>
    <br>

    <div class="choos2">
        <p1 style="font-size: 20px; font-family: Arial; color: aliceblue; padding: 10px;">RestingECG: </p1>
        <select id="RestingECG" style="padding: 4px; color: black;">
            <option value='Normal'>Normal</option>
            <!-- <option value='LVH'>LVH</option> -->
            <option value='ST'>ST</option>
        </select>

        <p1 style="font-size: 20px; font-family: Arial; color: aliceblue; padding: 0 10px 0 100px;">ExerciseAngina: </p1>
        <select id="ExerciseAngina" style=" padding: 4px; color:black;">
            <!-- <option value='Up'>Up</option> -->
            <option value='0'>N</option>
            <option value='1'>Y</option>
        </select>
    </div>

    <br>

    <div class="choos3">
        <p1 style="font-size: 20px;font-family: Arial; color: aliceblue; padding: 10px;">Oldpeak: </p1>
        <select id="Oldpeak" style=" padding: 4px; color: black;">
            <option value='0'>No</option>
            <option value='1'>Yes</option>
        </select>

        <p1 style="font-size: 20px; font-family: Arial; color: aliceblue; padding: 0 10px 0 156px;">ST_Slope: </p1>
        <select id="ST_Slope" style="padding: 4px; color:black;">
            <option value='Up'>Up</option>
            <option value='Flat'>Flat</option>
        </select>
    </div>
    <hr style="height:1px;border-width:0;color:gray;background-color:gray; width: 60%;">
    <br>

    <input type="button" id="Check" value="Check.." onclick="Prediction()"
        style="font-size: 20px; font-family: Arial; width: 300px; height: 30px;" />
        <br>
        
        <h1 style="color:white; font-size: 25px; font-family: Arial;"></h1>

        <div id = "myChart1" style=" margin-left: 20%; visibility: hidden; background-color: white; max-width: 700px; ">
            <canvas id="myChart" width="750" height="350"></canvas>
        </div>
    
</body>
<script> 

    var slider_age = document.getElementById("s_age");
    var output_age = document.getElementById("age");
        slider_age.oninput = function() {
            document.getElementById("age").value = this.value;
        }
        output_age.oninput = function(){
            document.getElementById("s_age").value = this.value;
        }

    var slider_Cholesterol = document.getElementById("s_Cholesterol");
    var output_Cholesterol = document.getElementById("Cholesterol");
        slider_Cholesterol.oninput = function() {
            document.getElementById("Cholesterol").value = this.value;
        }
        output_Cholesterol.oninput = function(){
            document.getElementById("s_Cholesterol").value = this.value;
        }

    var slider_RestingBP = document.getElementById("s_RestingBP");
    var output_RestingBP = document.getElementById("RestingBP");
        slider_RestingBP.oninput = function() {
            document.getElementById("RestingBP").value = this.value;
        }
        output_RestingBP.oninput = function(){
            document.getElementById("s_RestingBP").value = this.value;
        }

    var slider_MaxHR = document.getElementById("s_MaxHR");
    var output_MaxHR = document.getElementById("MaxHR");
        slider_MaxHR.oninput = function() {
            document.getElementById("MaxHR").value = this.value;
        }
        output_MaxHR.oninput = function(){
            document.getElementById("s_MaxHR").value = this.value;
        }


</script>
<script>
    var y = []
    async function chartIt(data) {
        await getData(data);
        const ctx = document.getElementById('myChart').getContext('2d');

        const myChart = new Chart(ctx, {
          
          data: {
            labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138],
            datasets: [{
              type: 'line',
              label: 'other results',
              data: [0.0002408125001238659, 0.0002789560239762068, 0.0005572575028054416, 0.000814766448456794, 0.0019388915970921516, 0.002242892514914274, 0.0027083070017397404, 0.0027459696866571903, 0.005047171376645565, 0.005047966260462999, 0.005683888215571642, 0.005842746235430241, 0.007091420236974955, 0.00711620831862092, 0.007424590643495321, 0.008166832849383354, 0.008278844878077507, 0.009126745164394379, 0.00985186081379652, 0.010577717795968056, 0.010900991037487984, 0.010984113439917564, 0.011338433250784874, 0.012257510796189308, 0.015010114759206772, 0.015247841365635395, 0.015284298919141293, 0.015296152792870998, 0.01612604595720768, 0.01948811672627926, 0.024676306173205376, 0.024941548705101013, 0.02803722396492958, 0.028142891824245453, 0.02951679192483425, 0.04325604438781738, 0.043523531407117844, 0.04458954930305481, 0.0536159984767437, 0.05422156676650047, 0.06478084623813629, 0.07594005018472672, 0.10492783784866333, 0.1212986633181572, 0.14235612750053406, 0.1812719702720642, 0.225859597325325, 0.24619629979133606, 0.25591516494750977, 0.26145991683006287, 0.2668305039405823, 0.29426145553588867, 0.32186609506607056, 0.35404491424560547, 0.36163273453712463, 0.3621947169303894, 0.43549299240112305, 0.4514123201370239, 0.46206361055374146, 0.5158950090408325, 0.5246423482894897, 0.531083345413208, 0.5470046997070312, 0.565493106842041, 0.5706520676612854, 0.5824573040008545, 0.5850368142127991, 0.5912651419639587, 0.6055843830108643, 0.6126895546913147, 0.63480144739151, 0.6421929597854614, 0.6476878523826599, 0.6480264067649841, 0.6674771904945374, 0.6917031407356262, 0.7050651907920837, 0.726212739944458, 0.7594351768493652, 0.7600357532501221, 0.790660560131073, 0.8195099830627441, 0.8295395970344543, 0.829842746257782, 0.8465071320533752, 0.8568339347839355, 0.8683382868766785, 0.8885471224784851, 0.8888364434242249, 0.896032989025116, 0.8964409232139587, 0.9011561274528503, 0.9089661836624146, 0.9124873876571655, 0.9219149947166443, 0.9288668036460876, 0.9293069839477539, 0.9329797029495239, 0.9339666962623596, 0.9379807710647583, 0.9469435214996338, 0.9493395090103149, 0.9493753910064697, 0.9543607831001282, 0.9589500427246094, 0.9630533456802368, 0.9631178379058838, 0.9655012488365173, 0.967307448387146, 0.9673101902008057, 0.9687660336494446, 0.9718695878982544, 0.9742683172225952, 0.9761773347854614, 0.97971111536026, 0.9807970523834229, 0.9817478060722351, 0.981748640537262, 0.9830904006958008, 0.9861329793930054, 0.9883827567100525, 0.9887674450874329, 0.9905984997749329, 0.9908108711242676, 0.9934564232826233, 0.9938401579856873, 0.9938827753067017, 0.9942909479141235, 0.994346559047699, 0.9943655729293823, 0.9953070282936096, 0.9969549179077148, 0.9969726800918579, 0.9971919655799866, 0.9979921579360962, 0.9983654618263245, 0.9992836117744446, 0.999427318572998],
              pointRadius: 0,
              backgroundColor: ['rgba(255, 99, 132, 1)'],
              borderColor: ['rgba(255, 99, 132, 1)'],
              tension: 0.4
            },
            {
              type: 'line',
              label: 'your result',
              data: y,
              pointRadius: 0,
              backgroundColor: ['rgb(54, 162, 235, 1)'],
              borderColor: ['rgb(54, 162, 235, 1)']  
            }]
          },
          
          options: {
            scales: {
              x: {
                beginAtZero: true,
                ticks: {
                    display : false
                },
                grid: {
                    color: (context) => {
                        console.log(context.tick.value)
                         return 'rgba(0,0,0,0)'
                        }
                    }
                }
              }
            }
          
        });

      }
      function getData(data) {
        for (let i = 0; i < 138; i++) {
          y.push(data);
        }
      }
</script>
</html>